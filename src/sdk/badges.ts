/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { badgesAdminListBadges } from "../funcs/badgesAdminListBadges.js";
import { badgesCreateBadge } from "../funcs/badgesCreateBadge.js";
import { badgesDeleteBadge } from "../funcs/badgesDeleteBadge.js";
import { badgesListUserBadges } from "../funcs/badgesListUserBadges.js";
import { badgesUpdateBadge } from "../funcs/badgesUpdateBadge.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import { unwrapAsync } from "./types/fp.js";

export class Badges extends ClientSDK {
    /**
     * List badges
     */
    async adminListBadges(
        options?: RequestOptions
    ): Promise<operations.AdminListBadgesResponseBody> {
        return unwrapAsync(badgesAdminListBadges(this, options));
    }

    /**
     * Create badge
     */
    async createBadge(
        request?: operations.CreateBadgeRequestBody | undefined,
        options?: RequestOptions
    ): Promise<operations.CreateBadgeResponseBody> {
        return unwrapAsync(badgesCreateBadge(this, request, options));
    }

    /**
     * Delete badge
     */
    async deleteBadge(id: number, options?: RequestOptions): Promise<void> {
        return unwrapAsync(badgesDeleteBadge(this, id, options));
    }

    /**
     * List badges for a user
     */
    async listUserBadges(
        username: string,
        options?: RequestOptions
    ): Promise<operations.ListUserBadgesResponseBody> {
        return unwrapAsync(badgesListUserBadges(this, username, options));
    }

    /**
     * Update badge
     */
    async updateBadge(
        id: number,
        requestBody?: operations.UpdateBadgeRequestBody | undefined,
        options?: RequestOptions
    ): Promise<operations.UpdateBadgeResponseBody> {
        return unwrapAsync(badgesUpdateBadge(this, id, requestBody, options));
    }
}
