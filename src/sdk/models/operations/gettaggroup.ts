/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetTagGroupRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;
}

export class GetTagGroupPermissions extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "everyone" })
    everyone?: number;
}

export class GetTagGroupTagGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "one_per_topic" })
    onePerTopic?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "parent_tag_name" })
    parentTagName?: any[];

    @SpeakeasyMetadata()
    @Expose({ name: "permissions" })
    @Type(() => GetTagGroupPermissions)
    permissions?: GetTagGroupPermissions;

    @SpeakeasyMetadata()
    @Expose({ name: "tag_names" })
    tagNames?: any[];
}

/**
 * notifications
 */
export class GetTagGroupResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "tag_group" })
    @Type(() => GetTagGroupTagGroup)
    tagGroup?: GetTagGroupTagGroup;
}

export class GetTagGroupResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * notifications
     */
    @SpeakeasyMetadata()
    object?: GetTagGroupResponseBody;
}
