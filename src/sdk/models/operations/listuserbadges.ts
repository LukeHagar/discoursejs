/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListUserBadgesRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=username" })
    username: string;
}

export class ListUserBadgesBadgeTypes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sort_order" })
    sortOrder: number;
}

export class ListUserBadgesBadges extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "allow_title" })
    allowTitle: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "badge_grouping_id" })
    badgeGroupingId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "badge_type_id" })
    badgeTypeId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description: string;

    @SpeakeasyMetadata()
    @Expose({ name: "enabled" })
    enabled: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "grant_count" })
    grantCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "icon" })
    icon: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "image_url" })
    imageUrl: string;

    @SpeakeasyMetadata()
    @Expose({ name: "listable" })
    listable: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "manually_grantable" })
    manuallyGrantable: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "multiple_grant" })
    multipleGrant: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "slug" })
    slug: string;

    @SpeakeasyMetadata()
    @Expose({ name: "system" })
    system: boolean;
}

export class GrantedBies extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "admin" })
    admin: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "avatar_template" })
    avatarTemplate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "flair_name" })
    flairName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "moderator" })
    moderator: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "trust_level" })
    trustLevel: number;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username: string;
}

export class UserBadges extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "badge_id" })
    badgeId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "can_favorite" })
    canFavorite: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "granted_at" })
    grantedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "granted_by_id" })
    grantedById: number;

    @SpeakeasyMetadata()
    @Expose({ name: "grouping_position" })
    groupingPosition: number;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "is_favorite" })
    isFavorite: string;
}

/**
 * success response
 */
export class ListUserBadgesResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: ListUserBadgesBadgeTypes })
    @Expose({ name: "badge_types" })
    @Type(() => ListUserBadgesBadgeTypes)
    badgeTypes?: ListUserBadgesBadgeTypes[];

    @SpeakeasyMetadata({ elemType: ListUserBadgesBadges })
    @Expose({ name: "badges" })
    @Type(() => ListUserBadgesBadges)
    badges?: ListUserBadgesBadges[];

    @SpeakeasyMetadata({ elemType: GrantedBies })
    @Expose({ name: "granted_bies" })
    @Type(() => GrantedBies)
    grantedBies?: GrantedBies[];

    @SpeakeasyMetadata({ elemType: UserBadges })
    @Expose({ name: "user_badges" })
    @Type(() => UserBadges)
    userBadges: UserBadges[];
}

export class ListUserBadgesResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * success response
     */
    @SpeakeasyMetadata()
    object?: ListUserBadgesResponseBody;
}
