/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type UpdateUsernameRequestBody = {
  newUsername: string;
};

export type UpdateUsernameRequest = {
  requestBody?: UpdateUsernameRequestBody | undefined;
  username: string;
};

/** @internal */
export const UpdateUsernameRequestBody$inboundSchema: z.ZodType<
  UpdateUsernameRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  new_username: z.string(),
}).transform((v) => {
  return remap$(v, {
    "new_username": "newUsername",
  });
});

/** @internal */
export type UpdateUsernameRequestBody$Outbound = {
  new_username: string;
};

/** @internal */
export const UpdateUsernameRequestBody$outboundSchema: z.ZodType<
  UpdateUsernameRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateUsernameRequestBody
> = z.object({
  newUsername: z.string(),
}).transform((v) => {
  return remap$(v, {
    newUsername: "new_username",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUsernameRequestBody$ {
  /** @deprecated use `UpdateUsernameRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateUsernameRequestBody$inboundSchema;
  /** @deprecated use `UpdateUsernameRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateUsernameRequestBody$outboundSchema;
  /** @deprecated use `UpdateUsernameRequestBody$Outbound` instead. */
  export type Outbound = UpdateUsernameRequestBody$Outbound;
}

/** @internal */
export const UpdateUsernameRequest$inboundSchema: z.ZodType<
  UpdateUsernameRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => UpdateUsernameRequestBody$inboundSchema).optional(),
  username: z.string(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateUsernameRequest$Outbound = {
  RequestBody?: UpdateUsernameRequestBody$Outbound | undefined;
  username: string;
};

/** @internal */
export const UpdateUsernameRequest$outboundSchema: z.ZodType<
  UpdateUsernameRequest$Outbound,
  z.ZodTypeDef,
  UpdateUsernameRequest
> = z.object({
  requestBody: z.lazy(() => UpdateUsernameRequestBody$outboundSchema)
    .optional(),
  username: z.string(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUsernameRequest$ {
  /** @deprecated use `UpdateUsernameRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateUsernameRequest$inboundSchema;
  /** @deprecated use `UpdateUsernameRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateUsernameRequest$outboundSchema;
  /** @deprecated use `UpdateUsernameRequest$Outbound` instead. */
  export type Outbound = UpdateUsernameRequest$Outbound;
}
