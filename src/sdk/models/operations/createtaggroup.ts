/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateTagGroupRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

export class Permissions extends SpeakeasyBase {}

export class TagGroup extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "one_per_topic" })
    onePerTopic: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "parent_tag_name" })
    parentTagName: any[];

    @SpeakeasyMetadata()
    @Expose({ name: "permissions" })
    @Type(() => Permissions)
    permissions: Permissions;

    @SpeakeasyMetadata()
    @Expose({ name: "tag_names" })
    tagNames: any[];
}

/**
 * tag group created
 */
export class CreateTagGroupResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "tag_group" })
    @Type(() => TagGroup)
    tagGroup: TagGroup;
}

export class CreateTagGroupResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * tag group created
     */
    @SpeakeasyMetadata()
    object?: CreateTagGroupResponseBody;
}
