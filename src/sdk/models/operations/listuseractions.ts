/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListUserActionsRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=filter" })
    filter: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=offset" })
    offset: number;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=username" })
    username: string;
}

export class UserActions extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "acting_avatar_template" })
    actingAvatarTemplate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "acting_name" })
    actingName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "acting_user_id" })
    actingUserId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "acting_username" })
    actingUsername: string;

    @SpeakeasyMetadata()
    @Expose({ name: "action_code" })
    actionCode: string;

    @SpeakeasyMetadata()
    @Expose({ name: "action_type" })
    actionType: number;

    @SpeakeasyMetadata()
    @Expose({ name: "archived" })
    archived: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "avatar_template" })
    avatarTemplate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "category_id" })
    categoryId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "closed" })
    closed: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "deleted" })
    deleted: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "excerpt" })
    excerpt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "hidden" })
    hidden: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "post_id" })
    postId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "post_number" })
    postNumber: number;

    @SpeakeasyMetadata()
    @Expose({ name: "post_type" })
    postType: string;

    @SpeakeasyMetadata()
    @Expose({ name: "slug" })
    slug: string;

    @SpeakeasyMetadata()
    @Expose({ name: "target_name" })
    targetName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "target_user_id" })
    targetUserId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "target_username" })
    targetUsername: string;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title: string;

    @SpeakeasyMetadata()
    @Expose({ name: "topic_id" })
    topicId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "user_id" })
    userId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username: string;
}

/**
 * response
 */
export class ListUserActionsResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: UserActions })
    @Expose({ name: "user_actions" })
    @Type(() => UserActions)
    userActions: UserActions[];
}

export class ListUserActionsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * response
     */
    @SpeakeasyMetadata()
    object?: ListUserActionsResponseBody;
}
