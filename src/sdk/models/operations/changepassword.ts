/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type ChangePasswordRequestBody = {
    password: string;
    username: string;
};

export type ChangePasswordRequest = {
    requestBody?: ChangePasswordRequestBody | undefined;
    token: string;
};

/** @internal */
export const ChangePasswordRequestBody$inboundSchema: z.ZodType<
    ChangePasswordRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    password: z.string(),
    username: z.string(),
});

/** @internal */
export type ChangePasswordRequestBody$Outbound = {
    password: string;
    username: string;
};

/** @internal */
export const ChangePasswordRequestBody$outboundSchema: z.ZodType<
    ChangePasswordRequestBody$Outbound,
    z.ZodTypeDef,
    ChangePasswordRequestBody
> = z.object({
    password: z.string(),
    username: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChangePasswordRequestBody$ {
    /** @deprecated use `ChangePasswordRequestBody$inboundSchema` instead. */
    export const inboundSchema = ChangePasswordRequestBody$inboundSchema;
    /** @deprecated use `ChangePasswordRequestBody$outboundSchema` instead. */
    export const outboundSchema = ChangePasswordRequestBody$outboundSchema;
    /** @deprecated use `ChangePasswordRequestBody$Outbound` instead. */
    export type Outbound = ChangePasswordRequestBody$Outbound;
}

/** @internal */
export const ChangePasswordRequest$inboundSchema: z.ZodType<
    ChangePasswordRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: z.lazy(() => ChangePasswordRequestBody$inboundSchema).optional(),
        token: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type ChangePasswordRequest$Outbound = {
    RequestBody?: ChangePasswordRequestBody$Outbound | undefined;
    token: string;
};

/** @internal */
export const ChangePasswordRequest$outboundSchema: z.ZodType<
    ChangePasswordRequest$Outbound,
    z.ZodTypeDef,
    ChangePasswordRequest
> = z
    .object({
        requestBody: z.lazy(() => ChangePasswordRequestBody$outboundSchema).optional(),
        token: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChangePasswordRequest$ {
    /** @deprecated use `ChangePasswordRequest$inboundSchema` instead. */
    export const inboundSchema = ChangePasswordRequest$inboundSchema;
    /** @deprecated use `ChangePasswordRequest$outboundSchema` instead. */
    export const outboundSchema = ChangePasswordRequest$outboundSchema;
    /** @deprecated use `ChangePasswordRequest$Outbound` instead. */
    export type Outbound = ChangePasswordRequest$Outbound;
}
