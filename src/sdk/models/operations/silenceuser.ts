/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class SilenceUserRequestBody extends SpeakeasyBase {
    /**
     * Will send an email with this message when present
     */
    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "post_action" })
    postAction?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "reason" })
    reason?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "silenced_till" })
    silencedTill?: string;
}

export class SilenceUserRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: number;

    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: SilenceUserRequestBody;
}

export class SilencedBy extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "avatar_template" })
    avatarTemplate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username: string;
}

export class Silence extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "silence_reason" })
    silenceReason: string;

    @SpeakeasyMetadata()
    @Expose({ name: "silenced" })
    silenced: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "silenced_at" })
    silencedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "silenced_by" })
    @Type(() => SilencedBy)
    silencedBy: SilencedBy;

    @SpeakeasyMetadata()
    @Expose({ name: "silenced_till" })
    silencedTill: string;
}

/**
 * response
 */
export class SilenceUserResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "silence" })
    @Type(() => Silence)
    silence: Silence;
}

export class SilenceUserResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * response
     */
    @SpeakeasyMetadata()
    object?: SilenceUserResponseBody;
}
