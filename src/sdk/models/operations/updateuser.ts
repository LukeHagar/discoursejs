/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type UpdateUserExternalIds = {};

export type UpdateUserRequestBody = {
    externalIds?: UpdateUserExternalIds | undefined;
    name?: string | undefined;
};

export type UpdateUserRequest = {
    apiKey: string;
    apiUsername: string;
    requestBody?: UpdateUserRequestBody | undefined;
    username: string;
};

export type UpdateUserUser = {};

/**
 * user updated
 */
export type UpdateUserResponseBody = {
    success: string;
    user: UpdateUserUser;
};

/** @internal */
export const UpdateUserExternalIds$inboundSchema: z.ZodType<
    UpdateUserExternalIds,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type UpdateUserExternalIds$Outbound = {};

/** @internal */
export const UpdateUserExternalIds$outboundSchema: z.ZodType<
    UpdateUserExternalIds$Outbound,
    z.ZodTypeDef,
    UpdateUserExternalIds
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUserExternalIds$ {
    /** @deprecated use `UpdateUserExternalIds$inboundSchema` instead. */
    export const inboundSchema = UpdateUserExternalIds$inboundSchema;
    /** @deprecated use `UpdateUserExternalIds$outboundSchema` instead. */
    export const outboundSchema = UpdateUserExternalIds$outboundSchema;
    /** @deprecated use `UpdateUserExternalIds$Outbound` instead. */
    export type Outbound = UpdateUserExternalIds$Outbound;
}

/** @internal */
export const UpdateUserRequestBody$inboundSchema: z.ZodType<
    UpdateUserRequestBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        external_ids: z.lazy(() => UpdateUserExternalIds$inboundSchema).optional(),
        name: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            external_ids: "externalIds",
        });
    });

/** @internal */
export type UpdateUserRequestBody$Outbound = {
    external_ids?: UpdateUserExternalIds$Outbound | undefined;
    name?: string | undefined;
};

/** @internal */
export const UpdateUserRequestBody$outboundSchema: z.ZodType<
    UpdateUserRequestBody$Outbound,
    z.ZodTypeDef,
    UpdateUserRequestBody
> = z
    .object({
        externalIds: z.lazy(() => UpdateUserExternalIds$outboundSchema).optional(),
        name: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            externalIds: "external_ids",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUserRequestBody$ {
    /** @deprecated use `UpdateUserRequestBody$inboundSchema` instead. */
    export const inboundSchema = UpdateUserRequestBody$inboundSchema;
    /** @deprecated use `UpdateUserRequestBody$outboundSchema` instead. */
    export const outboundSchema = UpdateUserRequestBody$outboundSchema;
    /** @deprecated use `UpdateUserRequestBody$Outbound` instead. */
    export type Outbound = UpdateUserRequestBody$Outbound;
}

/** @internal */
export const UpdateUserRequest$inboundSchema: z.ZodType<UpdateUserRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            "Api-Key": z.string(),
            "Api-Username": z.string(),
            RequestBody: z.lazy(() => UpdateUserRequestBody$inboundSchema).optional(),
            username: z.string(),
        })
        .transform((v) => {
            return remap$(v, {
                "Api-Key": "apiKey",
                "Api-Username": "apiUsername",
                RequestBody: "requestBody",
            });
        });

/** @internal */
export type UpdateUserRequest$Outbound = {
    "Api-Key": string;
    "Api-Username": string;
    RequestBody?: UpdateUserRequestBody$Outbound | undefined;
    username: string;
};

/** @internal */
export const UpdateUserRequest$outboundSchema: z.ZodType<
    UpdateUserRequest$Outbound,
    z.ZodTypeDef,
    UpdateUserRequest
> = z
    .object({
        apiKey: z.string(),
        apiUsername: z.string(),
        requestBody: z.lazy(() => UpdateUserRequestBody$outboundSchema).optional(),
        username: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            apiKey: "Api-Key",
            apiUsername: "Api-Username",
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUserRequest$ {
    /** @deprecated use `UpdateUserRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateUserRequest$inboundSchema;
    /** @deprecated use `UpdateUserRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateUserRequest$outboundSchema;
    /** @deprecated use `UpdateUserRequest$Outbound` instead. */
    export type Outbound = UpdateUserRequest$Outbound;
}

/** @internal */
export const UpdateUserUser$inboundSchema: z.ZodType<UpdateUserUser, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type UpdateUserUser$Outbound = {};

/** @internal */
export const UpdateUserUser$outboundSchema: z.ZodType<
    UpdateUserUser$Outbound,
    z.ZodTypeDef,
    UpdateUserUser
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUserUser$ {
    /** @deprecated use `UpdateUserUser$inboundSchema` instead. */
    export const inboundSchema = UpdateUserUser$inboundSchema;
    /** @deprecated use `UpdateUserUser$outboundSchema` instead. */
    export const outboundSchema = UpdateUserUser$outboundSchema;
    /** @deprecated use `UpdateUserUser$Outbound` instead. */
    export type Outbound = UpdateUserUser$Outbound;
}

/** @internal */
export const UpdateUserResponseBody$inboundSchema: z.ZodType<
    UpdateUserResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.string(),
    user: z.lazy(() => UpdateUserUser$inboundSchema),
});

/** @internal */
export type UpdateUserResponseBody$Outbound = {
    success: string;
    user: UpdateUserUser$Outbound;
};

/** @internal */
export const UpdateUserResponseBody$outboundSchema: z.ZodType<
    UpdateUserResponseBody$Outbound,
    z.ZodTypeDef,
    UpdateUserResponseBody
> = z.object({
    success: z.string(),
    user: z.lazy(() => UpdateUserUser$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateUserResponseBody$ {
    /** @deprecated use `UpdateUserResponseBody$inboundSchema` instead. */
    export const inboundSchema = UpdateUserResponseBody$inboundSchema;
    /** @deprecated use `UpdateUserResponseBody$outboundSchema` instead. */
    export const outboundSchema = UpdateUserResponseBody$outboundSchema;
    /** @deprecated use `UpdateUserResponseBody$Outbound` instead. */
    export type Outbound = UpdateUserResponseBody$Outbound;
}
