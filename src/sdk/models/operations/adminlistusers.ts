/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum QueryParamAsc {
    True = "true",
}

export enum Flag {
    Active = "active",
    New = "new",
    Staff = "staff",
    Suspended = "suspended",
    Blocked = "blocked",
    Suspect = "suspect",
}

export enum QueryParamOrder {
    Created = "created",
    LastEmailed = "last_emailed",
    Seen = "seen",
    Username = "username",
    Email = "email",
    TrustLevel = "trust_level",
    DaysVisited = "days_visited",
    PostsRead = "posts_read",
    TopicsViewed = "topics_viewed",
    Posts = "posts",
    ReadTime = "read_time",
}

export class AdminListUsersRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=asc" })
    asc?: QueryParamAsc;

    /**
     * Filter to the user with this email address
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
    email?: string;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=flag" })
    flag: Flag;

    /**
     * Filter to users with this IP address
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ip" })
    ip?: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
    order?: QueryParamOrder;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
    page?: number;

    /**
     * Include user email addresses in response. These requests will be logged in the staff action logs.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=show_emails" })
    showEmails?: boolean;

    /**
     * Include user stats information
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=stats" })
    stats?: boolean;
}

export class AdminListUsersResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "active" })
    active: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "admin" })
    admin: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "avatar_template" })
    avatarTemplate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at_age" })
    createdAtAge: number;

    @SpeakeasyMetadata()
    @Expose({ name: "days_visited" })
    daysVisited: number;

    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_emailed_age" })
    lastEmailedAge: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_emailed_at" })
    lastEmailedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_seen_age" })
    lastSeenAge: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_seen_at" })
    lastSeenAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "manual_locked_trust_level" })
    manualLockedTrustLevel: string;

    @SpeakeasyMetadata()
    @Expose({ name: "moderator" })
    moderator: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "post_count" })
    postCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "posts_read_count" })
    postsReadCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "secondary_emails" })
    secondaryEmails?: any[];

    @SpeakeasyMetadata()
    @Expose({ name: "staged" })
    staged: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "time_read" })
    timeRead: number;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title: string;

    @SpeakeasyMetadata()
    @Expose({ name: "topics_entered" })
    topicsEntered: number;

    @SpeakeasyMetadata()
    @Expose({ name: "trust_level" })
    trustLevel: number;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username: string;
}

export class AdminListUsersResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * response
     */
    @SpeakeasyMetadata({ elemType: AdminListUsersResponseBody })
    responseBodies?: AdminListUsersResponseBody[];
}
