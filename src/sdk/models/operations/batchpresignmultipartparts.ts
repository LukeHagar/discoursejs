/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type BatchPresignMultipartPartsRequestBody = {
  /**
   * The part numbers to generate the presigned URLs for, must be between 1 and 10000.
   */
  partNumbers: Array<any>;
  /**
   * The unique identifier returned in the original /create-multipart request.
   */
  uniqueIdentifier: string;
};

/**
 * The presigned URLs for each part number, which has the part numbers as keys.
 */
export type PresignedUrls = {};

/**
 * external upload initialized
 */
export type BatchPresignMultipartPartsResponseBody = {
  /**
   * The presigned URLs for each part number, which has the part numbers as keys.
   */
  presignedUrls: PresignedUrls;
};

/** @internal */
export const BatchPresignMultipartPartsRequestBody$inboundSchema: z.ZodType<
  BatchPresignMultipartPartsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  part_numbers: z.array(z.any()),
  unique_identifier: z.string(),
}).transform((v) => {
  return remap$(v, {
    "part_numbers": "partNumbers",
    "unique_identifier": "uniqueIdentifier",
  });
});

/** @internal */
export type BatchPresignMultipartPartsRequestBody$Outbound = {
  part_numbers: Array<any>;
  unique_identifier: string;
};

/** @internal */
export const BatchPresignMultipartPartsRequestBody$outboundSchema: z.ZodType<
  BatchPresignMultipartPartsRequestBody$Outbound,
  z.ZodTypeDef,
  BatchPresignMultipartPartsRequestBody
> = z.object({
  partNumbers: z.array(z.any()),
  uniqueIdentifier: z.string(),
}).transform((v) => {
  return remap$(v, {
    partNumbers: "part_numbers",
    uniqueIdentifier: "unique_identifier",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BatchPresignMultipartPartsRequestBody$ {
  /** @deprecated use `BatchPresignMultipartPartsRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    BatchPresignMultipartPartsRequestBody$inboundSchema;
  /** @deprecated use `BatchPresignMultipartPartsRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    BatchPresignMultipartPartsRequestBody$outboundSchema;
  /** @deprecated use `BatchPresignMultipartPartsRequestBody$Outbound` instead. */
  export type Outbound = BatchPresignMultipartPartsRequestBody$Outbound;
}

/** @internal */
export const PresignedUrls$inboundSchema: z.ZodType<
  PresignedUrls,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PresignedUrls$Outbound = {};

/** @internal */
export const PresignedUrls$outboundSchema: z.ZodType<
  PresignedUrls$Outbound,
  z.ZodTypeDef,
  PresignedUrls
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PresignedUrls$ {
  /** @deprecated use `PresignedUrls$inboundSchema` instead. */
  export const inboundSchema = PresignedUrls$inboundSchema;
  /** @deprecated use `PresignedUrls$outboundSchema` instead. */
  export const outboundSchema = PresignedUrls$outboundSchema;
  /** @deprecated use `PresignedUrls$Outbound` instead. */
  export type Outbound = PresignedUrls$Outbound;
}

/** @internal */
export const BatchPresignMultipartPartsResponseBody$inboundSchema: z.ZodType<
  BatchPresignMultipartPartsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  presigned_urls: z.lazy(() => PresignedUrls$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "presigned_urls": "presignedUrls",
  });
});

/** @internal */
export type BatchPresignMultipartPartsResponseBody$Outbound = {
  presigned_urls: PresignedUrls$Outbound;
};

/** @internal */
export const BatchPresignMultipartPartsResponseBody$outboundSchema: z.ZodType<
  BatchPresignMultipartPartsResponseBody$Outbound,
  z.ZodTypeDef,
  BatchPresignMultipartPartsResponseBody
> = z.object({
  presignedUrls: z.lazy(() => PresignedUrls$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    presignedUrls: "presigned_urls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BatchPresignMultipartPartsResponseBody$ {
  /** @deprecated use `BatchPresignMultipartPartsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    BatchPresignMultipartPartsResponseBody$inboundSchema;
  /** @deprecated use `BatchPresignMultipartPartsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    BatchPresignMultipartPartsResponseBody$outboundSchema;
  /** @deprecated use `BatchPresignMultipartPartsResponseBody$Outbound` instead. */
  export type Outbound = BatchPresignMultipartPartsResponseBody$Outbound;
}
