/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class BatchPresignMultipartPartsRequestBody extends SpeakeasyBase {
    /**
     * The part numbers to generate the presigned URLs for, must be between 1 and 10000.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "part_numbers" })
    partNumbers: any[];

    /**
     * The unique identifier returned in the original /create-multipart request.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "unique_identifier" })
    uniqueIdentifier: string;
}

/**
 * The presigned URLs for each part number, which has the part numbers as keys.
 */
export class PresignedUrls extends SpeakeasyBase {}

/**
 * external upload initialized
 */
export class BatchPresignMultipartPartsResponseBody extends SpeakeasyBase {
    /**
     * The presigned URLs for each part number, which has the part numbers as keys.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "presigned_urls" })
    @Type(() => PresignedUrls)
    presignedUrls: PresignedUrls;
}

export class BatchPresignMultipartPartsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * external upload initialized
     */
    @SpeakeasyMetadata()
    object?: BatchPresignMultipartPartsResponseBody;
}
