/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type SuspendUserRequestBody = {
    /**
     * Will send an email with this message when present
     */
    message?: string | undefined;
    postAction?: string | undefined;
    reason: string;
    suspendUntil: string;
};

export type SuspendUserRequest = {
    requestBody?: SuspendUserRequestBody | undefined;
    id: number;
};

export type SuspendedBy = {
    avatarTemplate: string;
    id: number;
    name: string;
    username: string;
};

export type Suspension = {
    fullSuspendReason: string;
    suspendReason: string;
    suspendedAt: string;
    suspendedBy: SuspendedBy;
    suspendedTill: string;
};

/**
 * response
 */
export type SuspendUserResponseBody = {
    suspension: Suspension;
};

/** @internal */
export const SuspendUserRequestBody$inboundSchema: z.ZodType<
    SuspendUserRequestBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        message: z.string().optional(),
        post_action: z.string().optional(),
        reason: z.string(),
        suspend_until: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            post_action: "postAction",
            suspend_until: "suspendUntil",
        });
    });

/** @internal */
export type SuspendUserRequestBody$Outbound = {
    message?: string | undefined;
    post_action?: string | undefined;
    reason: string;
    suspend_until: string;
};

/** @internal */
export const SuspendUserRequestBody$outboundSchema: z.ZodType<
    SuspendUserRequestBody$Outbound,
    z.ZodTypeDef,
    SuspendUserRequestBody
> = z
    .object({
        message: z.string().optional(),
        postAction: z.string().optional(),
        reason: z.string(),
        suspendUntil: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            postAction: "post_action",
            suspendUntil: "suspend_until",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuspendUserRequestBody$ {
    /** @deprecated use `SuspendUserRequestBody$inboundSchema` instead. */
    export const inboundSchema = SuspendUserRequestBody$inboundSchema;
    /** @deprecated use `SuspendUserRequestBody$outboundSchema` instead. */
    export const outboundSchema = SuspendUserRequestBody$outboundSchema;
    /** @deprecated use `SuspendUserRequestBody$Outbound` instead. */
    export type Outbound = SuspendUserRequestBody$Outbound;
}

/** @internal */
export const SuspendUserRequest$inboundSchema: z.ZodType<
    SuspendUserRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: z.lazy(() => SuspendUserRequestBody$inboundSchema).optional(),
        id: z.number().int(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type SuspendUserRequest$Outbound = {
    RequestBody?: SuspendUserRequestBody$Outbound | undefined;
    id: number;
};

/** @internal */
export const SuspendUserRequest$outboundSchema: z.ZodType<
    SuspendUserRequest$Outbound,
    z.ZodTypeDef,
    SuspendUserRequest
> = z
    .object({
        requestBody: z.lazy(() => SuspendUserRequestBody$outboundSchema).optional(),
        id: z.number().int(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuspendUserRequest$ {
    /** @deprecated use `SuspendUserRequest$inboundSchema` instead. */
    export const inboundSchema = SuspendUserRequest$inboundSchema;
    /** @deprecated use `SuspendUserRequest$outboundSchema` instead. */
    export const outboundSchema = SuspendUserRequest$outboundSchema;
    /** @deprecated use `SuspendUserRequest$Outbound` instead. */
    export type Outbound = SuspendUserRequest$Outbound;
}

/** @internal */
export const SuspendedBy$inboundSchema: z.ZodType<SuspendedBy, z.ZodTypeDef, unknown> = z
    .object({
        avatar_template: z.string(),
        id: z.number().int(),
        name: z.string(),
        username: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            avatar_template: "avatarTemplate",
        });
    });

/** @internal */
export type SuspendedBy$Outbound = {
    avatar_template: string;
    id: number;
    name: string;
    username: string;
};

/** @internal */
export const SuspendedBy$outboundSchema: z.ZodType<
    SuspendedBy$Outbound,
    z.ZodTypeDef,
    SuspendedBy
> = z
    .object({
        avatarTemplate: z.string(),
        id: z.number().int(),
        name: z.string(),
        username: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            avatarTemplate: "avatar_template",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuspendedBy$ {
    /** @deprecated use `SuspendedBy$inboundSchema` instead. */
    export const inboundSchema = SuspendedBy$inboundSchema;
    /** @deprecated use `SuspendedBy$outboundSchema` instead. */
    export const outboundSchema = SuspendedBy$outboundSchema;
    /** @deprecated use `SuspendedBy$Outbound` instead. */
    export type Outbound = SuspendedBy$Outbound;
}

/** @internal */
export const Suspension$inboundSchema: z.ZodType<Suspension, z.ZodTypeDef, unknown> = z
    .object({
        full_suspend_reason: z.string(),
        suspend_reason: z.string(),
        suspended_at: z.string(),
        suspended_by: z.lazy(() => SuspendedBy$inboundSchema),
        suspended_till: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            full_suspend_reason: "fullSuspendReason",
            suspend_reason: "suspendReason",
            suspended_at: "suspendedAt",
            suspended_by: "suspendedBy",
            suspended_till: "suspendedTill",
        });
    });

/** @internal */
export type Suspension$Outbound = {
    full_suspend_reason: string;
    suspend_reason: string;
    suspended_at: string;
    suspended_by: SuspendedBy$Outbound;
    suspended_till: string;
};

/** @internal */
export const Suspension$outboundSchema: z.ZodType<Suspension$Outbound, z.ZodTypeDef, Suspension> = z
    .object({
        fullSuspendReason: z.string(),
        suspendReason: z.string(),
        suspendedAt: z.string(),
        suspendedBy: z.lazy(() => SuspendedBy$outboundSchema),
        suspendedTill: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            fullSuspendReason: "full_suspend_reason",
            suspendReason: "suspend_reason",
            suspendedAt: "suspended_at",
            suspendedBy: "suspended_by",
            suspendedTill: "suspended_till",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Suspension$ {
    /** @deprecated use `Suspension$inboundSchema` instead. */
    export const inboundSchema = Suspension$inboundSchema;
    /** @deprecated use `Suspension$outboundSchema` instead. */
    export const outboundSchema = Suspension$outboundSchema;
    /** @deprecated use `Suspension$Outbound` instead. */
    export type Outbound = Suspension$Outbound;
}

/** @internal */
export const SuspendUserResponseBody$inboundSchema: z.ZodType<
    SuspendUserResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    suspension: z.lazy(() => Suspension$inboundSchema),
});

/** @internal */
export type SuspendUserResponseBody$Outbound = {
    suspension: Suspension$Outbound;
};

/** @internal */
export const SuspendUserResponseBody$outboundSchema: z.ZodType<
    SuspendUserResponseBody$Outbound,
    z.ZodTypeDef,
    SuspendUserResponseBody
> = z.object({
    suspension: z.lazy(() => Suspension$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuspendUserResponseBody$ {
    /** @deprecated use `SuspendUserResponseBody$inboundSchema` instead. */
    export const inboundSchema = SuspendUserResponseBody$inboundSchema;
    /** @deprecated use `SuspendUserResponseBody$outboundSchema` instead. */
    export const outboundSchema = SuspendUserResponseBody$outboundSchema;
    /** @deprecated use `SuspendUserResponseBody$Outbound` instead. */
    export type Outbound = SuspendUserResponseBody$Outbound;
}
