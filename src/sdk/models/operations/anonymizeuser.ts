/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type AnonymizeUserRequest = {
  id: number;
};

/**
 * response
 */
export type AnonymizeUserResponseBody = {
  success: string;
  username: string;
};

/** @internal */
export const AnonymizeUserRequest$inboundSchema: z.ZodType<
  AnonymizeUserRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type AnonymizeUserRequest$Outbound = {
  id: number;
};

/** @internal */
export const AnonymizeUserRequest$outboundSchema: z.ZodType<
  AnonymizeUserRequest$Outbound,
  z.ZodTypeDef,
  AnonymizeUserRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AnonymizeUserRequest$ {
  /** @deprecated use `AnonymizeUserRequest$inboundSchema` instead. */
  export const inboundSchema = AnonymizeUserRequest$inboundSchema;
  /** @deprecated use `AnonymizeUserRequest$outboundSchema` instead. */
  export const outboundSchema = AnonymizeUserRequest$outboundSchema;
  /** @deprecated use `AnonymizeUserRequest$Outbound` instead. */
  export type Outbound = AnonymizeUserRequest$Outbound;
}

/** @internal */
export const AnonymizeUserResponseBody$inboundSchema: z.ZodType<
  AnonymizeUserResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  success: z.string(),
  username: z.string(),
});

/** @internal */
export type AnonymizeUserResponseBody$Outbound = {
  success: string;
  username: string;
};

/** @internal */
export const AnonymizeUserResponseBody$outboundSchema: z.ZodType<
  AnonymizeUserResponseBody$Outbound,
  z.ZodTypeDef,
  AnonymizeUserResponseBody
> = z.object({
  success: z.string(),
  username: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AnonymizeUserResponseBody$ {
  /** @deprecated use `AnonymizeUserResponseBody$inboundSchema` instead. */
  export const inboundSchema = AnonymizeUserResponseBody$inboundSchema;
  /** @deprecated use `AnonymizeUserResponseBody$outboundSchema` instead. */
  export const outboundSchema = AnonymizeUserResponseBody$outboundSchema;
  /** @deprecated use `AnonymizeUserResponseBody$Outbound` instead. */
  export type Outbound = AnonymizeUserResponseBody$Outbound;
}
