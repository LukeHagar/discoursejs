/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type BookmarkTopicRequest = {
    apiKey: string;
    apiUsername: string;
    id: string;
};

/** @internal */
export const BookmarkTopicRequest$inboundSchema: z.ZodType<
    BookmarkTopicRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "Api-Key": z.string(),
        "Api-Username": z.string(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            "Api-Key": "apiKey",
            "Api-Username": "apiUsername",
        });
    });

/** @internal */
export type BookmarkTopicRequest$Outbound = {
    "Api-Key": string;
    "Api-Username": string;
    id: string;
};

/** @internal */
export const BookmarkTopicRequest$outboundSchema: z.ZodType<
    BookmarkTopicRequest$Outbound,
    z.ZodTypeDef,
    BookmarkTopicRequest
> = z
    .object({
        apiKey: z.string(),
        apiUsername: z.string(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            apiKey: "Api-Key",
            apiUsername: "Api-Username",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BookmarkTopicRequest$ {
    /** @deprecated use `BookmarkTopicRequest$inboundSchema` instead. */
    export const inboundSchema = BookmarkTopicRequest$inboundSchema;
    /** @deprecated use `BookmarkTopicRequest$outboundSchema` instead. */
    export const outboundSchema = BookmarkTopicRequest$outboundSchema;
    /** @deprecated use `BookmarkTopicRequest$Outbound` instead. */
    export type Outbound = BookmarkTopicRequest$Outbound;
}
