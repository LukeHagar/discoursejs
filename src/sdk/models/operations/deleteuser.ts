/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type DeleteUserRequestBody = {
    blockEmail?: boolean | undefined;
    blockIp?: boolean | undefined;
    blockUrls?: boolean | undefined;
    deletePosts?: boolean | undefined;
};

export type DeleteUserRequest = {
    requestBody?: DeleteUserRequestBody | undefined;
    id: number;
};

/**
 * response
 */
export type DeleteUserResponseBody = {
    deleted: boolean;
};

/** @internal */
export const DeleteUserRequestBody$inboundSchema: z.ZodType<
    DeleteUserRequestBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        block_email: z.boolean().optional(),
        block_ip: z.boolean().optional(),
        block_urls: z.boolean().optional(),
        delete_posts: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            block_email: "blockEmail",
            block_ip: "blockIp",
            block_urls: "blockUrls",
            delete_posts: "deletePosts",
        });
    });

/** @internal */
export type DeleteUserRequestBody$Outbound = {
    block_email?: boolean | undefined;
    block_ip?: boolean | undefined;
    block_urls?: boolean | undefined;
    delete_posts?: boolean | undefined;
};

/** @internal */
export const DeleteUserRequestBody$outboundSchema: z.ZodType<
    DeleteUserRequestBody$Outbound,
    z.ZodTypeDef,
    DeleteUserRequestBody
> = z
    .object({
        blockEmail: z.boolean().optional(),
        blockIp: z.boolean().optional(),
        blockUrls: z.boolean().optional(),
        deletePosts: z.boolean().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            blockEmail: "block_email",
            blockIp: "block_ip",
            blockUrls: "block_urls",
            deletePosts: "delete_posts",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteUserRequestBody$ {
    /** @deprecated use `DeleteUserRequestBody$inboundSchema` instead. */
    export const inboundSchema = DeleteUserRequestBody$inboundSchema;
    /** @deprecated use `DeleteUserRequestBody$outboundSchema` instead. */
    export const outboundSchema = DeleteUserRequestBody$outboundSchema;
    /** @deprecated use `DeleteUserRequestBody$Outbound` instead. */
    export type Outbound = DeleteUserRequestBody$Outbound;
}

/** @internal */
export const DeleteUserRequest$inboundSchema: z.ZodType<DeleteUserRequest, z.ZodTypeDef, unknown> =
    z
        .object({
            RequestBody: z.lazy(() => DeleteUserRequestBody$inboundSchema).optional(),
            id: z.number().int(),
        })
        .transform((v) => {
            return remap$(v, {
                RequestBody: "requestBody",
            });
        });

/** @internal */
export type DeleteUserRequest$Outbound = {
    RequestBody?: DeleteUserRequestBody$Outbound | undefined;
    id: number;
};

/** @internal */
export const DeleteUserRequest$outboundSchema: z.ZodType<
    DeleteUserRequest$Outbound,
    z.ZodTypeDef,
    DeleteUserRequest
> = z
    .object({
        requestBody: z.lazy(() => DeleteUserRequestBody$outboundSchema).optional(),
        id: z.number().int(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteUserRequest$ {
    /** @deprecated use `DeleteUserRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteUserRequest$inboundSchema;
    /** @deprecated use `DeleteUserRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteUserRequest$outboundSchema;
    /** @deprecated use `DeleteUserRequest$Outbound` instead. */
    export type Outbound = DeleteUserRequest$Outbound;
}

/** @internal */
export const DeleteUserResponseBody$inboundSchema: z.ZodType<
    DeleteUserResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    deleted: z.boolean(),
});

/** @internal */
export type DeleteUserResponseBody$Outbound = {
    deleted: boolean;
};

/** @internal */
export const DeleteUserResponseBody$outboundSchema: z.ZodType<
    DeleteUserResponseBody$Outbound,
    z.ZodTypeDef,
    DeleteUserResponseBody
> = z.object({
    deleted: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteUserResponseBody$ {
    /** @deprecated use `DeleteUserResponseBody$inboundSchema` instead. */
    export const inboundSchema = DeleteUserResponseBody$inboundSchema;
    /** @deprecated use `DeleteUserResponseBody$outboundSchema` instead. */
    export const outboundSchema = DeleteUserResponseBody$outboundSchema;
    /** @deprecated use `DeleteUserResponseBody$Outbound` instead. */
    export type Outbound = DeleteUserResponseBody$Outbound;
}
