/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum Asc {
    True = "true",
}

export enum Order {
    LikesReceived = "likes_received",
    LikesGiven = "likes_given",
    TopicCount = "topic_count",
    PostCount = "post_count",
    TopicsEntered = "topics_entered",
    PostsRead = "posts_read",
    DaysVisited = "days_visited",
}

export enum Period {
    Daily = "daily",
    Weekly = "weekly",
    Monthly = "monthly",
    Quarterly = "quarterly",
    Yearly = "yearly",
    All = "all",
}

export class ListUsersPublicRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
    order: Order;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=period" })
    period: Period;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=asc" })
    asc?: Asc;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
    page?: number;
}

export class ListUsersPublicUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "avatar_template" })
    avatarTemplate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title: string;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username: string;
}

export class DirectoryItems extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "days_visited" })
    daysVisited: number;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "likes_given" })
    likesGiven: number;

    @SpeakeasyMetadata()
    @Expose({ name: "likes_received" })
    likesReceived: number;

    @SpeakeasyMetadata()
    @Expose({ name: "post_count" })
    postCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "posts_read" })
    postsRead: number;

    @SpeakeasyMetadata()
    @Expose({ name: "topic_count" })
    topicCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "topics_entered" })
    topicsEntered: number;

    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => ListUsersPublicUser)
    user: ListUsersPublicUser;
}

export class ListUsersPublicMeta extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "last_updated_at" })
    lastUpdatedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "load_more_directory_items" })
    loadMoreDirectoryItems: string;

    @SpeakeasyMetadata()
    @Expose({ name: "total_rows_directory_items" })
    totalRowsDirectoryItems: number;
}

/**
 * directory items response
 */
export class ListUsersPublicResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: DirectoryItems })
    @Expose({ name: "directory_items" })
    @Type(() => DirectoryItems)
    directoryItems: DirectoryItems[];

    @SpeakeasyMetadata()
    @Expose({ name: "meta" })
    @Type(() => ListUsersPublicMeta)
    meta: ListUsersPublicMeta;
}

export class ListUsersPublicResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * directory items response
     */
    @SpeakeasyMetadata()
    object?: ListUsersPublicResponseBody;
}
