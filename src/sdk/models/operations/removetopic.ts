/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type RemoveTopicRequest = {
  apiKey: string;
  apiUsername: string;
  id: string;
};

/** @internal */
export const RemoveTopicRequest$inboundSchema: z.ZodType<
  RemoveTopicRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "Api-Key": z.string(),
  "Api-Username": z.string(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "Api-Key": "apiKey",
    "Api-Username": "apiUsername",
  });
});

/** @internal */
export type RemoveTopicRequest$Outbound = {
  "Api-Key": string;
  "Api-Username": string;
  id: string;
};

/** @internal */
export const RemoveTopicRequest$outboundSchema: z.ZodType<
  RemoveTopicRequest$Outbound,
  z.ZodTypeDef,
  RemoveTopicRequest
> = z.object({
  apiKey: z.string(),
  apiUsername: z.string(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    apiKey: "Api-Key",
    apiUsername: "Api-Username",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RemoveTopicRequest$ {
  /** @deprecated use `RemoveTopicRequest$inboundSchema` instead. */
  export const inboundSchema = RemoveTopicRequest$inboundSchema;
  /** @deprecated use `RemoveTopicRequest$outboundSchema` instead. */
  export const outboundSchema = RemoveTopicRequest$outboundSchema;
  /** @deprecated use `RemoveTopicRequest$Outbound` instead. */
  export type Outbound = RemoveTopicRequest$Outbound;
}
