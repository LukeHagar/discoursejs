/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class Topic extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "category_id" })
    categoryId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title?: string;
}

export class UpdateTopicRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "topic" })
    @Type(() => Topic)
    topic?: Topic;
}

export class UpdateTopicRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Api-Key" })
    apiKey: string;

    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Api-Username" })
    apiUsername: string;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;

    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: UpdateTopicRequestBody;
}

export class BasicTopic extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "fancy_title" })
    fancyTitle?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "posts_count" })
    postsCount?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "slug" })
    slug?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title?: string;
}

/**
 * topic updated
 */
export class UpdateTopicResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "basic_topic" })
    @Type(() => BasicTopic)
    basicTopic?: BasicTopic;
}

export class UpdateTopicResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * topic updated
     */
    @SpeakeasyMetadata()
    object?: UpdateTopicResponseBody;
}
