/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type ListTagsExtras = {
    categories?: Array<any> | undefined;
};

export type Tags = {
    count?: number | undefined;
    id?: string | undefined;
    pmCount?: number | undefined;
    targetTag?: string | null | undefined;
    text?: string | undefined;
};

/**
 * notifications
 */
export type ListTagsResponseBody = {
    extras?: ListTagsExtras | undefined;
    tags?: Array<Tags> | undefined;
};

/** @internal */
export const ListTagsExtras$inboundSchema: z.ZodType<ListTagsExtras, z.ZodTypeDef, unknown> =
    z.object({
        categories: z.array(z.any()).optional(),
    });

/** @internal */
export type ListTagsExtras$Outbound = {
    categories?: Array<any> | undefined;
};

/** @internal */
export const ListTagsExtras$outboundSchema: z.ZodType<
    ListTagsExtras$Outbound,
    z.ZodTypeDef,
    ListTagsExtras
> = z.object({
    categories: z.array(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListTagsExtras$ {
    /** @deprecated use `ListTagsExtras$inboundSchema` instead. */
    export const inboundSchema = ListTagsExtras$inboundSchema;
    /** @deprecated use `ListTagsExtras$outboundSchema` instead. */
    export const outboundSchema = ListTagsExtras$outboundSchema;
    /** @deprecated use `ListTagsExtras$Outbound` instead. */
    export type Outbound = ListTagsExtras$Outbound;
}

/** @internal */
export const Tags$inboundSchema: z.ZodType<Tags, z.ZodTypeDef, unknown> = z
    .object({
        count: z.number().int().optional(),
        id: z.string().optional(),
        pm_count: z.number().int().optional(),
        target_tag: z.nullable(z.string()).optional(),
        text: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            pm_count: "pmCount",
            target_tag: "targetTag",
        });
    });

/** @internal */
export type Tags$Outbound = {
    count?: number | undefined;
    id?: string | undefined;
    pm_count?: number | undefined;
    target_tag?: string | null | undefined;
    text?: string | undefined;
};

/** @internal */
export const Tags$outboundSchema: z.ZodType<Tags$Outbound, z.ZodTypeDef, Tags> = z
    .object({
        count: z.number().int().optional(),
        id: z.string().optional(),
        pmCount: z.number().int().optional(),
        targetTag: z.nullable(z.string()).optional(),
        text: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            pmCount: "pm_count",
            targetTag: "target_tag",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Tags$ {
    /** @deprecated use `Tags$inboundSchema` instead. */
    export const inboundSchema = Tags$inboundSchema;
    /** @deprecated use `Tags$outboundSchema` instead. */
    export const outboundSchema = Tags$outboundSchema;
    /** @deprecated use `Tags$Outbound` instead. */
    export type Outbound = Tags$Outbound;
}

/** @internal */
export const ListTagsResponseBody$inboundSchema: z.ZodType<
    ListTagsResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    extras: z.lazy(() => ListTagsExtras$inboundSchema).optional(),
    tags: z.array(z.lazy(() => Tags$inboundSchema)).optional(),
});

/** @internal */
export type ListTagsResponseBody$Outbound = {
    extras?: ListTagsExtras$Outbound | undefined;
    tags?: Array<Tags$Outbound> | undefined;
};

/** @internal */
export const ListTagsResponseBody$outboundSchema: z.ZodType<
    ListTagsResponseBody$Outbound,
    z.ZodTypeDef,
    ListTagsResponseBody
> = z.object({
    extras: z.lazy(() => ListTagsExtras$outboundSchema).optional(),
    tags: z.array(z.lazy(() => Tags$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListTagsResponseBody$ {
    /** @deprecated use `ListTagsResponseBody$inboundSchema` instead. */
    export const inboundSchema = ListTagsResponseBody$inboundSchema;
    /** @deprecated use `ListTagsResponseBody$outboundSchema` instead. */
    export const outboundSchema = ListTagsResponseBody$outboundSchema;
    /** @deprecated use `ListTagsResponseBody$Outbound` instead. */
    export type Outbound = ListTagsResponseBody$Outbound;
}
