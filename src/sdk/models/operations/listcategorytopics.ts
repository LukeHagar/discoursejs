/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListCategoryTopicsRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: number;

    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=slug" })
    slug: string;
}

export class ListCategoryTopicsPosters extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description: string;

    @SpeakeasyMetadata()
    @Expose({ name: "extras" })
    extras: string;

    @SpeakeasyMetadata()
    @Expose({ name: "primary_group_id" })
    primaryGroupId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "user_id" })
    userId: number;
}

export class Topics extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "archetype" })
    archetype: string;

    @SpeakeasyMetadata()
    @Expose({ name: "archived" })
    archived: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "bookmarked" })
    bookmarked: string;

    @SpeakeasyMetadata()
    @Expose({ name: "bumped" })
    bumped: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "bumped_at" })
    bumpedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "category_id" })
    categoryId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "closed" })
    closed: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "excerpt" })
    excerpt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "fancy_title" })
    fancyTitle: string;

    @SpeakeasyMetadata()
    @Expose({ name: "featured_link" })
    featuredLink: string;

    @SpeakeasyMetadata()
    @Expose({ name: "has_summary" })
    hasSummary: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "highest_post_number" })
    highestPostNumber: number;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "image_url" })
    imageUrl: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_posted_at" })
    lastPostedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_poster_username" })
    lastPosterUsername: string;

    @SpeakeasyMetadata()
    @Expose({ name: "like_count" })
    likeCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "liked" })
    liked: string;

    @SpeakeasyMetadata()
    @Expose({ name: "pinned" })
    pinned: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "pinned_globally" })
    pinnedGlobally: boolean;

    @SpeakeasyMetadata({ elemType: ListCategoryTopicsPosters })
    @Expose({ name: "posters" })
    @Type(() => ListCategoryTopicsPosters)
    posters: ListCategoryTopicsPosters[];

    @SpeakeasyMetadata()
    @Expose({ name: "posts_count" })
    postsCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "reply_count" })
    replyCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "slug" })
    slug: string;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title: string;

    @SpeakeasyMetadata()
    @Expose({ name: "unpinned" })
    unpinned: string;

    @SpeakeasyMetadata()
    @Expose({ name: "unseen" })
    unseen: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "views" })
    views: number;

    @SpeakeasyMetadata()
    @Expose({ name: "visible" })
    visible: boolean;
}

export class TopicList extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "can_create_topic" })
    canCreateTopic: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "per_page" })
    perPage: number;

    @SpeakeasyMetadata()
    @Expose({ name: "top_tags" })
    topTags?: any[];

    @SpeakeasyMetadata({ elemType: Topics })
    @Expose({ name: "topics" })
    @Type(() => Topics)
    topics: Topics[];
}

export class Users extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "avatar_template" })
    avatarTemplate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "username" })
    username: string;
}

/**
 * success response
 */
export class ListCategoryTopicsResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "primary_groups" })
    primaryGroups?: any[];

    @SpeakeasyMetadata()
    @Expose({ name: "topic_list" })
    @Type(() => TopicList)
    topicList: TopicList;

    @SpeakeasyMetadata({ elemType: Users })
    @Expose({ name: "users" })
    @Type(() => Users)
    users?: Users[];
}

export class ListCategoryTopicsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * success response
     */
    @SpeakeasyMetadata()
    object?: ListCategoryTopicsResponseBody;
}
