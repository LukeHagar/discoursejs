/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type MarkNotificationsAsReadRequestBody = {
    /**
     * (optional) Leave off to mark all notifications as read
     */
    id?: number | undefined;
};

/**
 * notifications marked read
 */
export type MarkNotificationsAsReadResponseBody = {
    success?: string | undefined;
};

/** @internal */
export const MarkNotificationsAsReadRequestBody$inboundSchema: z.ZodType<
    MarkNotificationsAsReadRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.number().int().optional(),
});

/** @internal */
export type MarkNotificationsAsReadRequestBody$Outbound = {
    id?: number | undefined;
};

/** @internal */
export const MarkNotificationsAsReadRequestBody$outboundSchema: z.ZodType<
    MarkNotificationsAsReadRequestBody$Outbound,
    z.ZodTypeDef,
    MarkNotificationsAsReadRequestBody
> = z.object({
    id: z.number().int().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarkNotificationsAsReadRequestBody$ {
    /** @deprecated use `MarkNotificationsAsReadRequestBody$inboundSchema` instead. */
    export const inboundSchema = MarkNotificationsAsReadRequestBody$inboundSchema;
    /** @deprecated use `MarkNotificationsAsReadRequestBody$outboundSchema` instead. */
    export const outboundSchema = MarkNotificationsAsReadRequestBody$outboundSchema;
    /** @deprecated use `MarkNotificationsAsReadRequestBody$Outbound` instead. */
    export type Outbound = MarkNotificationsAsReadRequestBody$Outbound;
}

/** @internal */
export const MarkNotificationsAsReadResponseBody$inboundSchema: z.ZodType<
    MarkNotificationsAsReadResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.string().optional(),
});

/** @internal */
export type MarkNotificationsAsReadResponseBody$Outbound = {
    success?: string | undefined;
};

/** @internal */
export const MarkNotificationsAsReadResponseBody$outboundSchema: z.ZodType<
    MarkNotificationsAsReadResponseBody$Outbound,
    z.ZodTypeDef,
    MarkNotificationsAsReadResponseBody
> = z.object({
    success: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarkNotificationsAsReadResponseBody$ {
    /** @deprecated use `MarkNotificationsAsReadResponseBody$inboundSchema` instead. */
    export const inboundSchema = MarkNotificationsAsReadResponseBody$inboundSchema;
    /** @deprecated use `MarkNotificationsAsReadResponseBody$outboundSchema` instead. */
    export const outboundSchema = MarkNotificationsAsReadResponseBody$outboundSchema;
    /** @deprecated use `MarkNotificationsAsReadResponseBody$Outbound` instead. */
    export type Outbound = MarkNotificationsAsReadResponseBody$Outbound;
}
