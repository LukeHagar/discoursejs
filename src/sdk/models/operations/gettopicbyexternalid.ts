/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type GetTopicByExternalIdRequest = {
    externalId: string;
};

/** @internal */
export const GetTopicByExternalIdRequest$inboundSchema: z.ZodType<
    GetTopicByExternalIdRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        external_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            external_id: "externalId",
        });
    });

/** @internal */
export type GetTopicByExternalIdRequest$Outbound = {
    external_id: string;
};

/** @internal */
export const GetTopicByExternalIdRequest$outboundSchema: z.ZodType<
    GetTopicByExternalIdRequest$Outbound,
    z.ZodTypeDef,
    GetTopicByExternalIdRequest
> = z
    .object({
        externalId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            externalId: "external_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTopicByExternalIdRequest$ {
    /** @deprecated use `GetTopicByExternalIdRequest$inboundSchema` instead. */
    export const inboundSchema = GetTopicByExternalIdRequest$inboundSchema;
    /** @deprecated use `GetTopicByExternalIdRequest$outboundSchema` instead. */
    export const outboundSchema = GetTopicByExternalIdRequest$outboundSchema;
    /** @deprecated use `GetTopicByExternalIdRequest$Outbound` instead. */
    export type Outbound = GetTopicByExternalIdRequest$Outbound;
}
