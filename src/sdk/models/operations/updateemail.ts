/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type UpdateEmailRequestBody = {
    email: string;
};

export type UpdateEmailRequest = {
    requestBody?: UpdateEmailRequestBody | undefined;
    username: string;
};

/** @internal */
export const UpdateEmailRequestBody$inboundSchema: z.ZodType<
    UpdateEmailRequestBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    email: z.string(),
});

/** @internal */
export type UpdateEmailRequestBody$Outbound = {
    email: string;
};

/** @internal */
export const UpdateEmailRequestBody$outboundSchema: z.ZodType<
    UpdateEmailRequestBody$Outbound,
    z.ZodTypeDef,
    UpdateEmailRequestBody
> = z.object({
    email: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmailRequestBody$ {
    /** @deprecated use `UpdateEmailRequestBody$inboundSchema` instead. */
    export const inboundSchema = UpdateEmailRequestBody$inboundSchema;
    /** @deprecated use `UpdateEmailRequestBody$outboundSchema` instead. */
    export const outboundSchema = UpdateEmailRequestBody$outboundSchema;
    /** @deprecated use `UpdateEmailRequestBody$Outbound` instead. */
    export type Outbound = UpdateEmailRequestBody$Outbound;
}

/** @internal */
export const UpdateEmailRequest$inboundSchema: z.ZodType<
    UpdateEmailRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        RequestBody: z.lazy(() => UpdateEmailRequestBody$inboundSchema).optional(),
        username: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            RequestBody: "requestBody",
        });
    });

/** @internal */
export type UpdateEmailRequest$Outbound = {
    RequestBody?: UpdateEmailRequestBody$Outbound | undefined;
    username: string;
};

/** @internal */
export const UpdateEmailRequest$outboundSchema: z.ZodType<
    UpdateEmailRequest$Outbound,
    z.ZodTypeDef,
    UpdateEmailRequest
> = z
    .object({
        requestBody: z.lazy(() => UpdateEmailRequestBody$outboundSchema).optional(),
        username: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            requestBody: "RequestBody",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateEmailRequest$ {
    /** @deprecated use `UpdateEmailRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateEmailRequest$inboundSchema;
    /** @deprecated use `UpdateEmailRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateEmailRequest$outboundSchema;
    /** @deprecated use `UpdateEmailRequest$Outbound` instead. */
    export type Outbound = UpdateEmailRequest$Outbound;
}
