/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateBadgeRequestBody extends SpeakeasyBase {
    /**
     * The ID for the badge type. 1 for Gold, 2 for Silver, 3 for Bronze.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "badge_type_id" })
    badgeTypeId: number;

    /**
     * The name for the new badge.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}

export class UpdateBadgeRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: number;

    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: UpdateBadgeRequestBody;
}

export class UpdateBadgeBadge extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "allow_title" })
    allowTitle: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "auto_revoke" })
    autoRevoke: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "badge_grouping_id" })
    badgeGroupingId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "badge_type_id" })
    badgeTypeId: number;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description: string;

    @SpeakeasyMetadata()
    @Expose({ name: "enabled" })
    enabled: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "grant_count" })
    grantCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "icon" })
    icon: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "image_url" })
    imageUrl: string;

    @SpeakeasyMetadata()
    @Expose({ name: "listable" })
    listable: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "long_description" })
    longDescription: string;

    @SpeakeasyMetadata()
    @Expose({ name: "manually_grantable" })
    manuallyGrantable: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "multiple_grant" })
    multipleGrant: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "query" })
    query: string;

    @SpeakeasyMetadata()
    @Expose({ name: "show_posts" })
    showPosts: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "slug" })
    slug: string;

    @SpeakeasyMetadata()
    @Expose({ name: "system" })
    system: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "target_posts" })
    targetPosts: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "trigger" })
    trigger: string;
}

export class UpdateBadgeBadgeTypes extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sort_order" })
    sortOrder: number;
}

/**
 * success response
 */
export class UpdateBadgeResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "badge" })
    @Type(() => UpdateBadgeBadge)
    badge: UpdateBadgeBadge;

    @SpeakeasyMetadata({ elemType: UpdateBadgeBadgeTypes })
    @Expose({ name: "badge_types" })
    @Type(() => UpdateBadgeBadgeTypes)
    badgeTypes: UpdateBadgeBadgeTypes[];
}

export class UpdateBadgeResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * success response
     */
    @SpeakeasyMetadata()
    object?: UpdateBadgeResponseBody;
}
