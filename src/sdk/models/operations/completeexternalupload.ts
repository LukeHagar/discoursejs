/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CompleteExternalUploadRequestBody extends SpeakeasyBase {
    /**
     * Optionally set this to true if the upload is for a private message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "for_private_message" })
    forPrivateMessage?: string;

    /**
     * Optionally set this to true if the upload is for a site setting.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "for_site_setting" })
    forSiteSetting?: string;

    /**
     * Optionally set this to true if the upload was pasted into the upload area. This will convert PNG files to JPEG.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pasted" })
    pasted?: string;

    /**
     * The unique identifier returned in the original /generate-presigned-put request.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "unique_identifier" })
    uniqueIdentifier: string;
}

/**
 * external upload initialized
 */
export class CompleteExternalUploadResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "dominant_color" })
    dominantColor?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "extension" })
    extension: string;

    @SpeakeasyMetadata()
    @Expose({ name: "filesize" })
    filesize: number;

    @SpeakeasyMetadata()
    @Expose({ name: "height" })
    height: number;

    @SpeakeasyMetadata()
    @Expose({ name: "human_filesize" })
    humanFilesize: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    @SpeakeasyMetadata()
    @Expose({ name: "original_filename" })
    originalFilename: string;

    @SpeakeasyMetadata()
    @Expose({ name: "retain_hours" })
    retainHours: string;

    @SpeakeasyMetadata()
    @Expose({ name: "short_path" })
    shortPath: string;

    @SpeakeasyMetadata()
    @Expose({ name: "short_url" })
    shortUrl: string;

    @SpeakeasyMetadata()
    @Expose({ name: "thumbnail_height" })
    thumbnailHeight: number;

    @SpeakeasyMetadata()
    @Expose({ name: "thumbnail_width" })
    thumbnailWidth: number;

    @SpeakeasyMetadata()
    @Expose({ name: "url" })
    url: string;

    @SpeakeasyMetadata()
    @Expose({ name: "width" })
    width: number;
}

export class CompleteExternalUploadResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * external upload initialized
     */
    @SpeakeasyMetadata()
    object?: CompleteExternalUploadResponseBody;
}
